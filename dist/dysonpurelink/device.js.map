{"version":3,"sources":["../src/dysonpurelink/device.ts"],"names":[],"mappings":"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","file":"device.js","sourcesContent":["import { EventEmitter } from 'events';\r\nimport { connect, Client } from \"mqtt\";\r\nconst debugdevice = require('debug')('dyson/device')\r\n\r\nexport class Device extends EventEmitter {\r\n  client: Client;\r\n  password: string;\r\n  username: string;\r\n  ip: string;\r\n  url: string;\r\n  name: string;\r\n  port: number;\r\n  serial: any;\r\n  sensitivity: any;\r\n  _MQTTPrefix: string;\r\n  _deviceInfo: any;\r\n  _apiV2018: boolean;\r\n  options: {\r\n    keepalive: number;\r\n    clientId: string;\r\n    clean: boolean;\r\n    reconnectPeriod: number;\r\n    connectTimeout: number;\r\n    username: string;\r\n    password: string;\r\n    protocolId: string,\r\n    protocolVersion: number,\r\n    rejectUnauthorized: boolean;\r\n  };\r\n\r\n  constructor(deviceInfo) {\r\n    super()\r\n\r\n    this.password = null\r\n    this.username = null\r\n    this.ip = null\r\n    this.url = null\r\n    this.name = null\r\n    this.port = null\r\n    this.serial = null\r\n    this.name = null\r\n    this.sensitivity = deviceInfo.sensitivity || 1.0\r\n\r\n    this._MQTTPrefix = '475'\r\n    this._deviceInfo = deviceInfo\r\n\r\n    if (this._deviceInfo.Serial) {\r\n      this.serial = this._deviceInfo.Serial\r\n    }\r\n\r\n    if (this._deviceInfo.Name) {\r\n      this.name = this._deviceInfo.Name\r\n    }\r\n\r\n    this._decryptCredentials()\r\n  }\r\n\r\n  updateNetworkInfo(info) {\r\n    this.ip = info.ip\r\n    this.url = 'mqtt://' + this.ip\r\n    this.name = info.name\r\n    this.port = info.port\r\n    this._MQTTPrefix = info.mqttPrefix || '475'\r\n  }\r\n\r\n  getTemperature() {\r\n    return new Promise((resolve, reject) => {\r\n      this.once('sensor', (json) => {\r\n        const temperature = parseFloat(((parseInt(json.data.tact, 10) / 10) - 273.15).toFixed(2))\r\n        resolve(temperature)\r\n      })\r\n      this._requestCurrentState()\r\n    })\r\n  }\r\n\r\n  getRelativeHumidity() {\r\n    return new Promise((resolve, reject) => {\r\n      this.once('sensor', (json) => {\r\n        const relativeHumidity = parseInt(json.data.hact)\r\n        resolve(relativeHumidity)\r\n      })\r\n      this._requestCurrentState()\r\n    })\r\n  }\r\n\r\n  getAirQuality() {\r\n    return new Promise((resolve, reject) => {\r\n      this.once('sensor', (json) => {\r\n        let dustValue = Number.parseInt(json.data.pact || json.data.pm10)\r\n        let vocValue = Number.parseInt(json.data.vact || json.data.va10)\r\n        let airQuality = 0\r\n\r\n        if (isNaN(dustValue) || isNaN(vocValue)) {\r\n          airQuality = 0\r\n        } else {\r\n          airQuality = Math.min(Math.max(Math.floor((dustValue + vocValue) / 2 * this.sensitivity), 1), 5)\r\n        }\r\n\r\n        resolve(airQuality)\r\n      })\r\n      this._requestCurrentState()\r\n    })\r\n  }\r\n\r\n  getFanStatus() {\r\n    return new Promise((resolve, reject) => {\r\n      this.once('state', (json) => {\r\n        const fpwr = this._apiV2018 ? json['product-state']['fmod'] : json['product-state']['fpwr']\r\n        const isOn = this._apiV2018 ? (fpwr === 'FAN') : (fpwr === 'ON')\r\n\r\n        resolve(isOn)\r\n      })\r\n      this._requestCurrentState()\r\n    })\r\n  }\r\n\r\n  getFanSpeed() {\r\n    return new Promise((resolve, reject) => {\r\n      this.once('state', (json) => {\r\n        const fnsp = json['product-state']['fnsp']\r\n        const rotationSpeed = fnsp === 'AUTO' ? 'AUTO' : parseInt(fnsp, 10)\r\n        resolve(rotationSpeed)\r\n      })\r\n      this._requestCurrentState()\r\n    })\r\n  }\r\n\r\n  getAutoOnStatus() {\r\n    return new Promise((resolve, reject) => {\r\n      this.once('state', (json) => {\r\n        const isOn = (json['product-state']['auto'] === 'ON')\r\n        resolve(isOn)\r\n      })\r\n      this._requestCurrentState()\r\n    })\r\n  }\r\n\r\n  getRotationStatus() {\r\n    return new Promise((resolve, reject) => {\r\n      this.once('state', (json) => {\r\n        const oson = json['product-state']['oson']\r\n        const isOn = (oson === 'ON')\r\n        resolve(isOn)\r\n      })\r\n      this._requestCurrentState()\r\n    })\r\n  }\r\n\r\n  turnOff() {\r\n    return this.setFan(false)\r\n  }\r\n\r\n  turnOn() {\r\n    return this.setFan(true)\r\n  }\r\n\r\n  setFan(value) {\r\n    const data = !this._apiV2018 ? { fpwr: value ? 'ON' : 'OFF' } : { fmod: value ? 'FAN' : 'OFF' }\r\n    this._setStatus(data)\r\n    return this.getFanStatus()\r\n  }\r\n\r\n  setFanSpeed(value) {\r\n    const fnsp = Math.round(value / 10)\r\n    this._setStatus({ fnsp: this._apiV2018 ? \"000\" + fnsp : fnsp })\r\n    return this.getFanSpeed()\r\n  }\r\n\r\n  setAuto(value) {\r\n    const data = this._apiV2018 ? { auto: value ? 'ON' : 'OFF' } : { fmod: value ? 'AUTO' : 'OFF' }\r\n    this._setStatus(data)\r\n    return this.getAutoOnStatus()\r\n  }\r\n\r\n  setRotation(value) {\r\n    const oson = value ? 'ON' : 'OFF'\r\n    this._setStatus({ oson })\r\n    return this.getRotationStatus()\r\n  }\r\n\r\n  connect(clientId) {\r\n    this.options = {\r\n      keepalive: 10,\r\n      clientId: clientId,\r\n      protocolId: 'MQTT',\r\n      protocolVersion: 4,\r\n      clean: true,\r\n      reconnectPeriod: 10000,\r\n      connectTimeout: 30 * 1000,\r\n      username: this.username,\r\n      password: this.password,\r\n      rejectUnauthorized: false\r\n    }\r\n\r\n    this._apiV2018 = this._MQTTPrefix === '438' || this._MQTTPrefix === '455'\r\n\r\n    if (this._apiV2018 || this._MQTTPrefix === '520') {\r\n      this.options.protocolVersion = 3\r\n      this.options.protocolId = 'MQIsdp'\r\n    }\r\n\r\n    debugdevice(`MQTT (${this._MQTTPrefix}): connecting to ${this.url}`)\r\n\r\n    this.client = connect(this.url, this.options)\r\n\r\n    this.client.on('connect', () => {\r\n      debugdevice(`MQTT: connected to ${this.url}`)\r\n      this.client.subscribe(this._getCurrentStatusTopic())\r\n    })\r\n\r\n    this.client.on('error', (err) => {\r\n      console.error(`MQTT: error ${err}`)\r\n      this.client.reconnect();\r\n    })\r\n\r\n    this.client.on('message', (topic, message) => {\r\n      let json = JSON.parse(message.toString())\r\n      debugdevice(`MQTT: got message ${message}`)\r\n\r\n      if (json !== null) {\r\n        if (json.msg === 'ENVIRONMENTAL-CURRENT-SENSOR-DATA') {\r\n          this.emit('sensor', json)\r\n        }\r\n        if (json.msg === 'CURRENT-STATE') {\r\n          this.emit('state', json)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  disconnect() {\r\n    this.client.end();\r\n  }\r\n\r\n  decryptCredentials(encrypted_password) {\r\n    let iv = Buffer.from([0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]);\r\n    let key = Buffer.from([0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20])\r\n\r\n    let b64dec = (data) => {\r\n      return Buffer.from(data, 'base64').toString('binary')\r\n    };\r\n    var crypto2 = require('crypto');\r\n    let data = b64dec(encrypted_password)\r\n    let decipher = crypto2.createDecipheriv('aes-256-cbc', key, iv);\r\n    let decoded = decipher.update(data, 'binary', 'utf8');\r\n    decoded += decipher.final('utf8');\r\n    return decoded;\r\n  }\r\n\r\n  _decryptCredentials() {\r\n    var decrypted = JSON.parse(this.decryptCredentials(this._deviceInfo.LocalCredentials))\r\n    this.password = decrypted.apPasswordHash\r\n    this.username = decrypted.serial\r\n  }\r\n\r\n  _requestCurrentState() {\r\n    debugdevice(`MQTT: ${this.client}`);\r\n    this.client.publish(this._getCommandTopic(), JSON.stringify({\r\n      msg: 'REQUEST-CURRENT-STATE',\r\n      time: new Date().toISOString()\r\n    }));\r\n  }\r\n\r\n  _setStatus(data) {\r\n    const message = JSON.stringify({\r\n      msg: 'STATE-SET',\r\n      \"mode-reason\": \"LAPP\",\r\n      time: new Date().toISOString(),\r\n      data\r\n    })\r\n\r\n    this.client.publish(\r\n      this._getCommandTopic(),\r\n      message\r\n    )\r\n  }\r\n\r\n  _getCurrentStatusTopic() {\r\n    return `${this._MQTTPrefix}/${this.username}/status/current`\r\n  }\r\n\r\n  _getCommandTopic() {\r\n    return `${this._MQTTPrefix}/${this.username}/command`\r\n  }\r\n}\r\n\r\n\r\n"]}