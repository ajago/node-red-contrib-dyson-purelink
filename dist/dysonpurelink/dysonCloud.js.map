{"version":3,"sources":["../src/dysonpurelink/dysonCloud.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iEAAmD;AAEnD;IAOI;QACI,IAAI,CAAC,GAAG,GAAG,6BAA6B,CAAC;QACzC,IAAI,CAAC,IAAI,GAAG;YACR,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;SACf,CAAC;IACN,CAAC;IAEK,iCAAY,GAAlB,UAAmB,KAAK,EAAE,QAAQ,EAAE,OAAO;;;;;;wBACvC,IAAI,CAAC,OAAO,EAAE;4BACV,OAAO,GAAG,IAAI,CAAC;yBAClB;wBAEG,OAAO,GAAG;4BACV,GAAG,EAAK,IAAI,CAAC,GAAG,kDAA6C,OAAS;4BACtE,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE;gCACF,KAAK,EAAE,KAAK;gCACZ,QAAQ,EAAE,QAAQ;6BACrB;4BACD,YAAY,EAAE;gCACV,kBAAkB,EAAE,KAAK;6BAC5B;4BACD,IAAI,EAAE,IAAI;yBACb,CAAA;wBAEY,qBAAM,6BAAI,CAAC,OAAO,CAAC,EAAA;;wBAA1B,IAAI,GAAG,SAAmB;wBAChC,IAAI,CAAC,IAAI,GAAG;4BACR,OAAO,EAAE,IAAI,CAAC,OAAO;4BACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;yBAC1B,CAAC;wBACF,sBAAO,IAAI,CAAC,IAAI,EAAC;;;;KACpB;IAED,oCAAe,GAAf;QACI,IAAI,OAAO,GAAG;YACV,GAAG,EAAK,IAAI,CAAC,GAAG,qCAAkC;YAClD,MAAM,EAAE,KAAK;YACb,IAAI,EAAE;gBACF,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;gBAC3B,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;aAC/B;YACD,YAAY,EAAE;gBACV,kBAAkB,EAAE,KAAK;aAC5B;YACD,IAAI,EAAE,IAAI;SACb,CAAA;QACD,OAAO,4BAAG,CAAC,OAAO,CAAC,CAAC;IACxB,CAAC;IACL,iBAAC;AAAD,CAxDA,AAwDC,IAAA;AAxDY,gCAAU;AAwDtB,CAAC","file":"dysonCloud.js","sourcesContent":["import { get, post } from 'request-promise-native';\r\n\r\nexport class DysonCloud {\r\n    api: string;\r\n    auth: {\r\n        account: string;\r\n        password: string;\r\n    };\r\n\r\n    constructor() {\r\n        this.api = 'https://appapi.cp.dyson.com';\r\n        this.auth = {\r\n            account: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    async authenticate(email, password, country) {\r\n        if (!country) {\r\n            country = 'US';\r\n        }\r\n\r\n        var options = {\r\n            url: `${this.api}/v1/userregistration/authenticate?country=${country}`,\r\n            method: 'post',\r\n            body: {\r\n                Email: email,\r\n                Password: password\r\n            },\r\n            agentOptions: {\r\n                rejectUnauthorized: false\r\n            },\r\n            json: true\r\n        }\r\n\r\n        const info = await post(options);\r\n        this.auth = {\r\n            account: info.Account,\r\n            password: info.Password\r\n        };\r\n        return this.auth;\r\n    }\r\n\r\n    getCloudDevices() {\r\n        var options = {\r\n            url: `${this.api}/v2/provisioningservice/manifest`,\r\n            method: 'get',\r\n            auth: {\r\n                username: this.auth.account,\r\n                password: this.auth.password,\r\n            },\r\n            agentOptions: {\r\n                rejectUnauthorized: false\r\n            },\r\n            json: true\r\n        }\r\n        return get(options);\r\n    }\r\n};\r\n\r\n"]}